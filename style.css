@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap');

*{
    margin: 0px;
    padding: 0px;
    text-decoration: none;
    list-style: none;
    font-family: "Open Sans", sans-serif;
}


.grand-parent{
    padding: 0px;
    margin: 0px;
    height: 100vh;
    justify-self: center;
    align-items: center;
    background: #23e3c2;
}


.parent{
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
}
.slider{
    width: 800px;
    height: 500px;
    border-radius: 10px;
    overflow: hidden;
}
.slide{

    /* .slide's width is 500% of .slider's width/800px because .slider is the parent of .slide.
    child's width is based on it's parent width. So .slide's width = (800px * 5) = 4000px .
    .st's width is (4000px * 20/100) = 800px because .st is child of .slide. 
    Now .slider's width === .st's width. each image's height and width must be equal to 
    it's display container. Here .slider is the display container of each image. */

    width: 500%;
    height: 500px;
    display: flex;
}
.slide input{
    display: none;
}

/* .st has a link to image sliding and gap between two images. each image's parent is .st.
So .st's width will determine the images' width. */

.st{
    /* .slide's width is 500% of .slider's width/800px because .slider is the parent of .slide.
    child's width is based on it's parent width. So .slide's width = (800px * 5) = 4000px .
    .st's width is (4000px * 20/100) = 800px because .st is child of .slide. 
    Now .slider's width === .st's width. each image's height and width must be equal to 
    it's display container. Here .slider is the display container of each image. */

    width: 20%;

    /* if I delete the below transition:2s; then the images sliding will be stopped but 
    the images will come different way.  */
    transition: 2s;
}
.st img{

    width: 800px;
    height: 500px;
}
.nav-m{
    position: absolute;
    width: 800px;
    /* .nav-m and .nav-auto is placed at same location for this reason both's css style is same. 
    .nav-m is lifted from bottom to up 40px with below margin-top: -40px; so .nav-auto 
    is down from top to bottom 460px to place both at same location. */
    margin-top: -40px;
    justify-content: center;
    display: flex;
}

/* .nav-auto{
    position: absolute;
    width: 800px;
    margin-top: 460px;
    display: flex;
    justify-content: center;
} */

.m-btn{
    border: 2px solid #23e3c2;
    padding: 5px;
    border-radius: 10px;
    cursor: pointer;
    transition: 1s;
}
.m-btn:not(:last-child){
    margin-right: 30px;
}
.m-btn:hover{
    background-color: #23e3c2;
}

/* ~ is sibling selector/combinator. Sibling of #radio1 is .first */

#radio1:checked ~ .first{
    margin-left: 0;
}
#radio2:checked ~ .first{
    /* Here 20% is equal to 800px from above notes and discussion. 
    for minus value each image will go left side and four images will cover 
    (4*800)px = 3200px of total 4000px. after that sliding will be restarted 
    from 0px according to script file's condition */
    /* the below margin-left: -20%; is related to .st's width; */
    margin-left: -20%;
}
#radio3:checked ~ .first{
    /* the below margin-left: -40%; is related to .st's width; */
    margin-left: -40%;
}
#radio4:checked ~ .first{
    /* the below margin-left: -60%; is related to .st's width; */
    margin-left: -60%;
}
.nav-auto{
    position: absolute;
    width: 800px;
    margin-top: 460px;
    display: flex;
    justify-content: center;
}
.nav-auto div{
    border: 2px solid #23e3c2;
    padding: 5px;
    border-radius: 10px;
    transition: 1s;
}
.nav-auto div:not(:last-child){
    margin-right: 30px;
    justify-content: center;
}

/* ~ is sibling selector/combinator. Sibling of #radio1 is .nav-auto */

#radio1:checked ~ .nav-auto .a-b1{
    background: #23e3c2;
}
#radio2:checked ~ .nav-auto .a-b2{
    background: #23e3c2;
}
#radio3:checked ~ .nav-auto .a-b3{
    background: #23e3c2;
}
#radio4:checked ~ .nav-auto .a-b4{
    background: #23e3c2;
}
.grand-mother{
    width: 100%;
    height: 100vh;
    background-color: greenyellow;
}